[tool:pytest]
# Pytest configuration for Recoloca.AI Backend FastAPI
# Author: @AgenteM_DevFastAPI
# Date: 2025-06-20
# Version: 1.0.0

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Minimum version
minversion = 6.0

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=60
    --asyncio-mode=auto
    --disable-warnings
    -p no:cacheprovider

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    performance: Performance tests
    slow: Slow running tests
    auth: Authentication related tests
    rag: RAG service tests
    api: API endpoint tests
    cache: Cache related tests
    security: Security tests
    admin: Admin functionality tests
    rate_limit: Rate limiting tests
    cors: CORS related tests
    middleware: Middleware tests
    validation: Input validation tests
    error_handling: Error handling tests
    health: Health check tests
    mock: Tests using mocks
    real_service: Tests using real services (not mocked)

# Async test configuration
asyncio_mode = auto

# Test timeout (in seconds)
timeout = 300

# Ignore certain warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:jose.*
    ignore::UserWarning:passlib.*
    ignore::RuntimeWarning:asyncio.*

# Environment variables for testing
env =
    ENVIRONMENT=test
    DEBUG=false
    RAG_ENABLED=true
    CACHE_ENABLED=true
    RATE_LIMIT_ENABLED=true
    LOG_LEVEL=WARNING
    REDIS_URL=redis://localhost:6379/1
    JWT_SECRET_KEY=test_secret_key_for_testing_only
    JWT_ALGORITHM=HS256
    JWT_EXPIRATION_HOURS=24

# Test collection
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# Logging configuration for tests
log_cli = false
log_cli_level = WARNING
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */.venv/*
    */migrations/*
    */alembic/*
    */conftest.py
    */setup.py
    */manage.py
    */wsgi.py
    */asgi.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml