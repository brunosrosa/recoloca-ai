#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script para verificar qual backend RAG est√° sendo usado
"""

import sys
from pathlib import Path

# Adicionar core_logic ao path
sys.path.append(str(Path(__file__).parent.parent / "core_logic"))

try:
    from rag_retriever import get_retriever
    
    print("üîç Verificando configura√ß√£o do backend RAG...")
    print("=" * 50)
    
    # Obter retriever
    retriever = get_retriever()
    
    # Informa√ß√µes b√°sicas
    print(f"Backend em uso: {'PyTorch' if retriever.use_pytorch else 'FAISS'}")
    print(f"Force CPU: {retriever.force_cpu}")
    print(f"Force PyTorch: {retriever.force_pytorch}")
    print(f"Otimiza√ß√µes ativadas: {retriever.use_optimizations}")
    
    # Informa√ß√µes detalhadas do backend
    backend_info = retriever.get_backend_info()
    print("\nüìä Informa√ß√µes do Backend:")
    for key, value in backend_info.items():
        print(f"  {key}: {value}")
    
    # Verificar se FAISS-GPU est√° dispon√≠vel
    print("\nüîß Verifica√ß√£o FAISS-GPU:")
    try:
        import faiss
        print(f"  FAISS vers√£o: {faiss.__version__ if hasattr(faiss, '__version__') else 'Desconhecida'}")
        
        if hasattr(faiss, 'StandardGpuResources'):
            print("  ‚úÖ FAISS-GPU dispon√≠vel")
        else:
            print("  ‚ùå FAISS-GPU n√£o dispon√≠vel")
            
    except ImportError as e:
        print(f"  ‚ùå Erro ao importar FAISS: {e}")
    
    # Verificar PyTorch
    print("\nüî• Verifica√ß√£o PyTorch:")
    try:
        import torch
        print(f"  PyTorch vers√£o: {torch.__version__}")
        print(f"  CUDA dispon√≠vel: {torch.cuda.is_available()}")
        
        if torch.cuda.is_available():
            print(f"  GPU: {torch.cuda.get_device_name(0)}")
            print(f"  Dispositivos CUDA: {torch.cuda.device_count()}")
        
    except ImportError as e:
        print(f"  ‚ùå Erro ao importar PyTorch: {e}")
    
except Exception as e:
    print(f"‚ùå Erro: {e}")
    import traceback
    traceback.print_exc()