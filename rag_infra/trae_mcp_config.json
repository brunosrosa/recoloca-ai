{
  "mcpServers": {
    "recoloca-rag": {
      "command": "python",
      "args": [
        "rag_infra/mcp_server.py"
      ],
      "cwd": ".",
      "env": {
        "PYTHONPATH": "rag_infra:rag_infra/core_logic",
        "CUDA_VISIBLE_DEVICES": "0"
      },
      "description": "Sistema RAG para documentação do projeto Recoloca.ai",
      "timeout": 30000,
      "retries": 3,
      "healthCheck": {
        "enabled": true,
        "interval": 60000,
        "tool": "rag_get_status"
      },
      "capabilities": {
        "tools": [
          {
            "name": "rag_query",
            "description": "Consulta semântica no sistema RAG",
            "category": "search",
            "priority": "high"
          },
          {
            "name": "rag_search_by_document",
            "description": "Busca documentos por nome/caminho",
            "category": "search",
            "priority": "medium"
          },
          {
            "name": "rag_get_document_list",
            "description": "Lista documentos indexados",
            "category": "info",
            "priority": "medium"
          },
          {
            "name": "rag_reindex",
            "description": "Reindexar documentos",
            "category": "maintenance",
            "priority": "low"
          },
          {
            "name": "rag_get_status",
            "description": "Status do sistema RAG",
            "category": "info",
            "priority": "high"
          }
        ]
      },
      "logging": {
        "level": "INFO",
        "file": "rag_infra/logs/mcp_server.log",
        "maxSize": "10MB",
        "maxFiles": 5
      },
      "performance": {
        "maxConcurrentRequests": 5,
        "requestTimeout": 30000,
        "cacheEnabled": true,
        "cacheTTL": 300000
      }
    }
  },
  "agentConfigurations": {
    "@AgenteM_DevFastAPI": {
      "preferredTools": [
        "rag_query",
        "rag_search_by_document",
        "rag_get_document_list"
      ],
      "defaultParameters": {
        "rag_query": {
          "top_k": 5,
          "min_score": 0.3,
          "category_filter": "tech_stack"
        }
      },
      "autoSuggestions": {
        "enabled": true,
        "triggers": [
          "como implementar",
          "documentação sobre",
          "exemplo de",
          "arquitetura",
          "requisitos"
        ]
      }
    },
    "@AgenteM_Orquestrador": {
      "preferredTools": [
        "rag_query",
        "rag_get_document_list"
      ],
      "defaultParameters": {
        "rag_query": {
          "top_k": 3,
          "min_score": 0.4,
          "category_filter": "kanban"
        }
      }
    },
    "@AgenteM_ArquitetoTI": {
      "preferredTools": [
        "rag_query",
        "rag_search_by_document"
      ],
      "defaultParameters": {
        "rag_query": {
          "top_k": 7,
          "min_score": 0.2,
          "category_filter": "arquitetura"
        }
      }
    },
    "@AgenteM_UXDesigner": {
      "preferredTools": [
        "rag_query"
      ],
      "defaultParameters": {
        "rag_query": {
          "top_k": 4,
          "min_score": 0.3,
          "category_filter": "requisitos"
        }
      }
    }
  },
  "documentCategories": {
    "arquitetura": {
      "description": "Documentos de arquitetura e design do sistema",
      "patterns": [
        "**/03_Arquitetura/**",
        "**/arquitetura/**",
        "**/*arquitetura*",
        "**/*architecture*"
      ],
      "priority": "high"
    },
    "requisitos": {
      "description": "Especificações e requisitos do projeto",
      "patterns": [
        "**/02_Requisitos/**",
        "**/requisitos/**",
        "**/*requisitos*",
        "**/*requirements*",
        "**/ERS.md"
      ],
      "priority": "high"
    },
    "guias": {
      "description": "Guias e documentação central",
      "patterns": [
        "**/01_Guias_Centrais/**",
        "**/guias/**",
        "**/*guia*",
        "**/*guide*",
        "**/README.md"
      ],
      "priority": "medium"
    },
    "kanban": {
      "description": "Documentos de gerenciamento e kanban",
      "patterns": [
        "**/00_Gerenciamento_Projeto/**",
        "**/KANBAN/**",
        "**/*kanban*",
        "**/*roadmap*",
        "**/*tasks*"
      ],
      "priority": "medium"
    },
    "agentes": {
      "description": "Documentação dos agentes de IA",
      "patterns": [
        "**/04_Agentes_IA/**",
        "**/agentes/**",
        "**/*agente*",
        "**/*agent*"
      ],
      "priority": "medium"
    },
    "tech_stack": {
      "description": "Documentação técnica e stack tecnológico",
      "patterns": [
        "**/Tech_Stack/**",
        "**/tech/**",
        "**/*tech*",
        "**/*api*",
        "**/*fastapi*",
        "**/*python*"
      ],
      "priority": "high"
    }
  },
  "indexingSchedule": {
    "enabled": true,
    "interval": "daily",
    "time": "02:00",
    "autoReindex": {
      "onFileChange": true,
      "watchPatterns": [
        "**/*.md",
        "**/*.txt",
        "**/*.pdf",
        "**/*.docx"
      ],
      "debounceMs": 5000
    }
  },
  "searchSettings": {
    "defaultTopK": 5,
    "defaultMinScore": 0.3,
    "maxTopK": 20,
    "enableCache": true,
    "cacheSize": 100,
    "highlightResults": true,
    "showMetadata": true
  },
  "troubleshooting": {
    "commonIssues": {
      "gpu_not_available": {
        "description": "GPU não disponível, usando CPU",
        "solution": "Verifique drivers CUDA ou use force_cpu=true",
        "severity": "warning"
      },
      "index_not_found": {
        "description": "Índice FAISS não encontrado",
        "solution": "Execute a indexação inicial com rag_reindex",
        "severity": "error"
      },
      "embedding_model_error": {
        "description": "Erro ao carregar modelo de embedding",
        "solution": "Verifique conexão com internet e espaço em disco",
        "severity": "error"
      },
      "no_documents_found": {
        "description": "Nenhum documento encontrado para indexar",
        "solution": "Verifique se há documentos em rag_infra/source_documents",
        "severity": "warning"
      }
    },
    "diagnostics": {
      "checkCommands": [
        "rag_get_status",
        "rag_get_document_list"
      ],
      "logFiles": [
        "rag_infra/logs/rag_indexer.log",
        "rag_infra/logs/rag_retriever.log",
        "rag_infra/logs/mcp_server.log"
      ]
    }
  }
}